/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */


/* 
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define HOST_OS 1 // 0 for win, 1 for linux, 2 for mac

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define KEYS_T 36 37 38 39 40 41

// are these broken?
// #define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
// #define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
// #define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define XXX &none
#define ___ &trans

//UNICODE-keys
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €
ZMK_UNICODE_PAIR(fi_a,   N0, N0,  E, N4,   N0, N0,  C, N4) // äÄ
ZMK_UNICODE_PAIR(sv_o,   N0, N0,  E, N5,   N0, N0,  C, N5) // åÅ
ZMK_UNICODE_PAIR(fi_o,   N0, N0,  F, N6,   N0, N0,  D, N6) // öÖ

//Tap dances

ZMK_BEHAVIOR(td_out_tog, tap_dance, bindings = <&none>, <&none>, <&out OUT_TOG>;      tapping-term-ms = <300>;)     //triple smash to toggle usb output
ZMK_BEHAVIOR(td_ep_tog, tap_dance, bindings = <&none>, <&none>, <&ext_power EP_TOG>;  tapping-term-ms = <300>;) //triple smash to toggle power out

//Tap dances for Sym and Num-layers

ZMK_BEHAVIOR(td_at_dollar_caret,  tap_dance, bindings = <&kp AT>, <&kp DOLLAR>, <&kp CARET>;  tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_sqt_dqt_grave,    tap_dance, bindings = <&kp SQT>, <&kp DQT>, <&kp GRAVE>;    tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_lpar_lbrc,        tap_dance, bindings = <&kp LPAR>, <&kp LBRC>;               tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_rpar_rbrc,        tap_dance, bindings = <&kp RPAR>, <&kp RBRC>;               tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_flsh_blsh,        tap_dance, bindings = <&kp FSLH>, <&kp BACKSLASH>;          tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_excl_minus_prcnt, tap_dance, bindings = <&kp EXCL>, <&kp MINUS>, <&kp PRCNT>; tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_qmark_star,       tap_dance, bindings = <&kp QMARK>, <&kp STAR>;              tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_tilde_plus,       tap_dance, bindings = <&kp TILDE>, <&kp PLUS>;              tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_lt_lbrk,          tap_dance, bindings = <&kp LT>, <&kp LEFT_BRACKET>;         tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_gt_rbrk,          tap_dance, bindings = <&kp GT>, <&kp RIGHT_BRACKET>;        tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_pipe_amps_under,  tap_dance, bindings = <&kp PIPE>, <&kp AMPS>, <&kp UNDER>;  tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_star_caret,       tap_dance, bindings = <&kp STAR>, <&kp CARET>;              tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_7_grave,          tap_dance, bindings = <&kp N7>, <&kp GRAVE>;                tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_8_lpar,           tap_dance, bindings = <&kp N8>, <&kp LPAR>;                 tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_9_rpar,           tap_dance, bindings = <&kp N9>, <&kp RPAR>;                 tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_5_prcnt,          tap_dance, bindings = <&kp N5>, <&kp PRCNT>;                tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_0_comma,          tap_dance, bindings = <&kp N0>, <&kp COMMA>;                tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_1_dot,            tap_dance, bindings = <&kp N1>, <&kp DOT>;                  tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_minus_under,      tap_dance, bindings = <&kp MINUS>, <&kp UNDER>;             tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_semi_equal,       tap_dance, bindings = <&kp SEMI>, <&kp EQUAL>;              tapping-term-ms = <300>;)
ZMK_BEHAVIOR(td_colon_hash,       tap_dance, bindings = <&kp COLON>, <&kp HASH>;              tapping-term-ms = <300>;)

//Homerow mods and layer taps. positional for contralateral keys. retro-tap is disabled for now. hold-trigger-on-release enabled for HRMs
//thumbs do not trigger mod for layer taps.

#define QUICK_TAP_MS 175
#define PRIOR_IDLE_MS 150
#define TAPPING_TERM_MS 300

// flavor = "hold-preferred"; 
// swapped HRMs and LTs to balanced for debugging

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <TAPPING_TERM_MS>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <PRIOR_IDLE_MS>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

#define MAKE_LT(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <TAPPING_TERM_MS>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <PRIOR_IDLE_MS>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
    )

MAKE_HRM(lh_mt, &kp, &kp, KEYS_R KEYS_T)  // left-hand HRMs
MAKE_LT(lh_lt, &mo, &kp, KEYS_R)          // left-hand LTs
MAKE_HRM(rh_mt, &kp, &kp, KEYS_L KEYS_T)  // right-hand HRMs
MAKE_LT(rh_lt, &mo, &kp, KEYS_L)          // right-hand LTs


// ZMK_COMBO(name, binding, space delim keypos, layers[, timeout defaults to 30ms])

// Game layer switch swapped to Q+P
// Back to base switch swapped to Z+/

ZMK_COMBO(to_gme,  &to 7, LT4 RT4, 0, 200)
ZMK_COMBO(to_base, &to 0, LB4 RB4, 7, 200)


ZMK_COMBO(capsword, &caps_word, LM0 RM0, 0)

ZMK_COMBO(left_reset, &sys_reset, LH0 LH2 LT0, ALL)  //Reset and bootloader are enabled on all layers since 2 thumbs are down
ZMK_COMBO(right_reset, &sys_reset, RH0 RH2 RT0, ALL)
ZMK_COMBO(left_bootloader, &bootloader, LH0 LH2 LT4, ALL)
ZMK_COMBO(right_bootloader, &bootloader, RH0 RH2 RT4, ALL)

ZMK_COMBO(bt_disconnect_0,  &bt BT_DISC 0, LH2 LB0 RB0,1)
ZMK_COMBO(bt_disconnect_1,  &bt BT_DISC 0, LH2 LB0 RB1,1)
ZMK_COMBO(bt_disconnect_2,  &bt BT_DISC 0, LH2 LB0 RB2,1)
ZMK_COMBO(bt_disconnect_3,  &bt BT_DISC 0, LH2 LB0 RB3,1)
ZMK_COMBO(bt_clear,         &bt BT_CLR,    LH2 LB0 LB4,1)

/*
ZMK_LAYER(--layername--,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
*/

/*
ZMK_LAYER(Dummy,
          &none         &none         &none         &none         &none                  &none         &none         &none         &none         &none        
          &none         &none         &none         &none         &none                  &none         &none         &none         &none         &none        
          &none         &none         &none         &none         &none                  &none         &none         &none         &none         &none
                                      &none         &none         &none                  &none         &none         &none        
)
*/


ZMK_LAYER(Base,
     // ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
XXX       &kp Q           &kp W           &kp E           &kp R           &kp T               &kp Y              &kp U           &kp I            &kp O          &kp P       XXX
     // ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
XXX       &lh_mt LGUI A   &lh_mt LALT S  &lh_mt LCTRL D  &lh_mt LSHFT F   &kp G               &kp H          &rh_mt RSHFT J  &rh_mt RCTRL K  &rh_mt RALT L   &rh_mt RGUI SQT XXX
     // ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
XXX       &kp Z           &kp X           &kp C           &kp V           &kp B               &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH       XXX
     // ╰───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
                                         &lh_lt 1 TAB   &lh_lt 2 SPACE   &lh_lt 3 RET       &rh_lt 4 ESCAPE &rh_lt 5 BACKSPACE  &rh_lt 6 DEL
     //                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
)
 
ZMK_LAYER(Media,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭───────────────┬─────────────────┬─────────────────┬───────────────┬───────────────╮
XXX       &none         &none         &none         &none         &none             &kp F18         &kp F19           &kp F20           &kp F21         &kp F22        XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├───────────────┼─────────────────┼─────────────────┼───────────────┼───────────────┤
XXX       &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &none             &kp C_REWIND   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_FF        &td_ep_tog     XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├───────────────┼─────────────────┼─────────────────┼───────────────┼───────────────┤
XXX       &none         &none         &none         &none         &none             &bt BT_SEL 0    &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3    &td_out_tog    XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├───────────────┼─────────────────┼─────────────────┼───────────────┼───────────────┤
                                      &trans        &none         &none             &kp C_STOP      &kp C_PLAY_PAUSE  &kp C_MUTE
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰───────────────┴─────────────────┴─────────────────╯
)

ZMK_LAYER(Navi,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX       &none         &none         &none         &none         &none             &kp F13       &kp F14       &kp F15       &kp F16       &kp F17      XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &none             &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp CLCK     XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &none         &none         &none         &none         &none             &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &kp INS      XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &none         &trans        &none             &kp F23       &kp K_APP     &kp F24
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

/*
 Mouse layer is WIP, no mouse movement code yet.
 plan is to set up mouse movement on RM0-3 and either wheel or drag on RB0-3 and RClk,MClk,LClk on RH0-2
*/

ZMK_LAYER(Mouse,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX       &none         &none         &none         &none         &none             &kp K_REDO    &kp K_PASTE   &kp K_COPY    &kp K_CUT     &kp K_UNDO   XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &none             &none         &none         &none         &none         &none        XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &none         &none         &none         &none         &none             &none         &none         &none         &none         &none        XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &none         &none         &trans            &mkp LCLK     &mkp MCLK     &mkp RCLK
     //                               &none         &none         &trans            &none         &none         &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)



ZMK_LAYER(Sym,
     // ╭─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX       &td_at_dollar_caret   &td_sqt_dqt_grave     &td_lpar_lbrc         &td_rpar_rbrc         &td_flsh_blsh              &none         &none         &none         &none         &none       XXX
     // ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &td_semi_equal        &td_colon_hash        &td_excl_minus_prcnt  &td_qmark_star        &td_tilde_plus             &none         &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI    XXX
     // ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp COMMA             &kp DOT               &td_lt_lbrk           &td_gt_rbrk           &td_pipe_amps_under        &none         &none         &none         &none         &none       XXX
     // ╰─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                      &kp TAB               &kp SPACE             &kp RET                    &trans        &none         &none
     //                                             ╰─────────────────────┴─────────────────────┴─────────────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Num,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX      &td_star_caret &td_7_grave  &td_8_lpar    &td_9_rpar    &td_flsh_blsh      &none         &none         &none         &none         &none        XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp EQUAL     &kp N4        &td_5_prcnt   &kp N6        &kp KP_PLUS       &none         &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI     XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &td_0_comma   &td_1_dot     &kp N2        &kp N3        &td_minus_under   &none         &none         &none         &none         &none        XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &kp TAB       &kp SPACE     &kp RET           &none         &trans        &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Func,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX       &kp F12       &kp F7        &kp F8        &kp F9        &kp PSCRN         &none         &none         &none         &none         &none        XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp F11       &kp F4        &kp F5        &kp F6        &kp SCROLLLOCK    &none         &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI     XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp F10       &kp F1        &kp F2        &kp F3        &kp PAUSE_BREAK   &none         &none         &none         &none         &none        XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &kp TAB       &kp SPACE     &kp RET           &none         &none         &trans
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Game,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX       &kp ESC       &kp Q         &kp W         &kp E         &kp R             &none         &none         &none         &none         &none        XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp TAB       &kp A         &kp S         &kp D         &kp F             &none         &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI     XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp LSHFT     &kp Z         &kp X         &kp C         &kp V             &none         &none         &none         &none         &none        XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &kp LCTRL     &kp SPACE     &mo 8             &none         &none         &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Galt,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
XXX       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &none         &none         &none         &none         &none        XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp N6        &kp N7        &kp N8        &kp N9        &kp N0            &none         &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI     XXX
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
XXX       &kp T         &kp G         &kp B         &kp N         &kp M             &none         &none         &none         &none         &none        XXX
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                       &none         &none        &trans            &none         &none         &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
/* Vim: set ft=c: */
